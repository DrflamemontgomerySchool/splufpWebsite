
const __spl__add = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a + b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__sub = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a - b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__mul = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a * b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__div = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a / b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__neg = new __splufp__function(function() { return function(__spl__a) { return function(a) { return -a; }(__spl__a.call()); };});
const __spl__log = new __splufp__function(function() { return function(__spl__str) { return function(str) { return console.log(str); }(__spl__str.call()); };});
const __spl__array_at = new __splufp__function(function() { return function(__spl__arr) { return function(__spl__n) { return function(arr, n) { return arr[n]; }(__spl__arr.call(), __spl__n.call()); }; };});
const __spl__set_arr = new __splufp__function(function() { return function(__spl__arr) { return function(__spl__n) { return function(__spl__v) { return function(arr, n, v) { return arr[n] = v; }(__spl__arr.call(), __spl__n.call(), __spl__v.call()); }; }; };});
const __spl__slice = new __splufp__function(function() { return function(__spl__arr) { return function(__spl__pos) { return function(__spl__end) { return function(arr, pos, end) { return arr.slice(pos, end); }(__spl__arr.call(), __spl__pos.call(), __spl__end.call()); }; }; };});
const __spl__splice = new __splufp__function(function() { return function(__spl__arr) { return function(__spl__pos) { return function(__spl__len) { return function(arr, pos, len) { return arr.splice(pos, len); }(__spl__arr.call(), __spl__pos.call(), __spl__len.call()); }; }; };});
const __spl__len = new __splufp__function(function() { return function(__spl__arr) { return function(arr) { return arr.length; }(__spl__arr.call()); };});
const __spl__range = new __splufp__function(function() { return function(__spl__start) { return function(__spl__end) { return function(start, end) { return [...Array(end-start).keys()].map(i => i + start);; }(__spl__start.call(), __spl__end.call()); }; };});
const __spl__array = new __splufp__function(function() { return function(__spl__size) { return function(size) { return Array(size); }(__spl__size.call()); };});
const __spl__fill = new __splufp__function(function() { return function(__spl__arr) { return function(__spl__val) { return function(arr, val) { return arr.fill(val); }(__spl__arr.call(), __spl__val.call()); }; };});
const __spl__foldl = new __splufp__function(function() { return function(__spl__fn) { return function(__spl__init) { return function(__spl__arr) { return foldl(__spl__fn.call(), __spl__init.call(), __spl__arr.call()); }; }; };});
const __spl__foldr = new __splufp__function(function() { return function(__spl__fn) { return function(__spl__init) { return function(__spl__arr) { return foldr(__spl__fn.call(), __spl__init.call(), __spl__arr.call()); }; }; };});
const __spl__map = new __splufp__function(function() { return function(__spl__fn) { return function(__spl__arr) { return map(__spl__fn.call(), __spl__arr.call()); }; };});
const __spl__and = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a && b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__or = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a || b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__eq = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a == b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__neq = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a != b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__geq = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a >= b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__gt = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a > b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__leq = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a <= b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__lt = new __splufp__function(function() { return function(__spl__a) { return function(__spl__b) { return function(a, b) { return a < b; }(__spl__a.call(), __spl__b.call()); }; };});
const __spl__obj_get = new __splufp__function(function() { return function(__spl__obj) { return function(__spl__name) { return function(obj, name) { return obj[name]; }(__spl__obj.call(), __spl__name.call()); }; };});
const __spl__obj_set = new __splufp__function(function() { return function(__spl__obj) { return function(__spl__name) { return function(__spl__val) { return function(obj, name, val) { return obj[name] = val; }(__spl__obj.call(), __spl__name.call(), __spl__val.call()); }; }; };});
const __spl__delay = new __splufp__function(function() { return function(__spl__ms) { return delay(__spl__ms.call()); };});
const __spl__elementById = new __splufp__function(function() { return function(__spl__id) { return function(id) { return document.getElementById(id); }(__spl__id.call()); };});
const __spl__onTimeout = new __splufp__function(function() { return function(__spl__func) { return function(__spl__delay) { return function(func, delay) { return setTimeout(func, delay); }(__spl__func.call(), __spl__delay.call()); }; };});
const __spl__main = new __splufp__function(function(){  return __spl__map.call()(__spl__log)(new __splufp__function(["Hello World","World Hello"]));;});